<h1>Update Jostens hood book</h1>

<p>
    Use this tool to update the Jostens "hood book" to include the latest and greatest list of alma maters and colors.
    If the format of the spreadsheet generated by Jostens changes this tool may require updating.
</p>

<?php

use DigraphCMS\Context;
use DigraphCMS\Cron\DeferredProgressBar;
use DigraphCMS\Cron\SpreadsheetJob;
use DigraphCMS\HTML\Forms\Field;
use DigraphCMS\HTML\Forms\FormWrapper;
use DigraphCMS\HTML\Forms\UploadSingle;
use DigraphCMS\HTTP\RedirectException;
use DigraphCMS\URL\URL;
use DigraphCMS_Plugins\unmous\regalia\Regalia;

if ($job = Context::arg('job')) {
    echo (new DeferredProgressBar($job))
        ->setBounceAfter(new URL('./'));
    return;
}

$form = new FormWrapper();

$file = (new Field('Hood book spreadsheet', $upload = new UploadSingle()))
    ->setRequired(true);
$form->addChild($file);

if ($form->ready()) {
    $f = $upload->value();
    // mark all jostens institutions as deprecated, they will be reactivated 
    // row by row as the spreadsheet processes
    Regalia::query()->update(
        'jostens_institution',
        ['institution_deprecated' => true]
    )->where('institution_deprecated <> 1')
        ->execute();
    // create a deferred execution job to process spreadsheet row by row
    $job = new SpreadsheetJob(
        $f['tmp_name'],
        function (array $row) {
            // turn NA values into nulls
            $row = array_map(
                function ($e) {
                    if ($e == 'NA') return null;
                    else return trim($e);
                },
                $row
            );
            // fetch existing institution with this name, if applicable
            $existing = Regalia::query()
                ->from('jostens_institution')
                ->where('institution_name = ?', [$row['school name']])
                ->where('institution_city = ?', [$row['city']])
                ->where('institution_state = ?', [$row['st']])
                ->limit(1)
                ->fetch();
            // if an institution with this name/city/state exists, update it,
            // set its colors to what's in the hood book and deprecation to false
            if ($existing) {
                Regalia::query()->update(
                    'jostens_institution',
                    [
                        'institution_color_lining1' => $row['lining 1'],
                        'institution_color_lining2' => $row['lining 2'],
                        'institution_color_chevron1' => $row['chevron 1'],
                        'institution_color_chevron2' => $row['chevron 2'],
                        'institution_color_chevron3' => $row['chevron 3'],
                        'institution_deprecated' => 0
                    ],
                    $existing['id']
                )->execute();
            }
            // otherwise insert a new institution
            else {
                // insert new institution into Jostens table
                $id = Regalia::query()->insertInto(
                    'jostens_institution',
                    [
                        'institution_name' => $row['school name'],
                        'institution_city' => $row['city'],
                        'institution_state' => $row['st'],
                        'institution_color_lining1' => $row['lining 1'],
                        'institution_color_lining2' => $row['lining 2'],
                        'institution_color_chevron1' => $row['chevron 1'],
                        'institution_color_chevron2' => $row['chevron 2'],
                        'institution_color_chevron3' => $row['chevron 3'],
                        'institution_deprecated' => 0
                    ],
                )->execute();
                // create the default reference to this institution
                Regalia::query()->insertInto(
                    'regalia_institution',
                    [
                        'label' => implode(', ', array_filter([
                            ucwords(strtolower($row['school name'])),
                            $row['city'] ? ucwords(strtolower($row['city'])) : false,
                            $row['st'] ? strtoupper($row['st']) : false
                        ])),
                        'jostens_id' => $id,
                        'deprecated' => 0
                    ]
                )->execute();
            }
        },
        pathinfo($f['name'], PATHINFO_EXTENSION)
    );
    throw new RedirectException(new URL('?job=' . $job->group()));
} else {
    echo $form;
}
